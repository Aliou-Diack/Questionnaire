import streamlit as st
import pandas as pd
import os
from datetime import date


st.set_page_config(page_title="Questionnaire Mortalit√©", layout="centered")

FICHIER = "reponses_questionnaire.xlsx"  # fichier o√π stocker les donn√©es

st.title("üìù Questionnaire - Mortalit√© Maternelle & Infantile")

with st.form("questionnaire", ):
    #-------------  Context et Menage  -------------------------
    st.header("**Section A: M√©nage & Contexte**")
    identifiantM√©nage= st.number_input("Identifiant m√©nage", min_value=1, max_value=400, step = 1)
    lieu_residance= st.radio("Lieu de r√©sidance", ["Rurale", "Urbain"])
    Region= st.radio("Region de r√©sidance", ["Tamba", "Kolda"])
    Eau = st.radio("avez vous de l'Eau potable au domicile?", ["Oui", "Non"])
    SANIT = st.selectbox("Type d‚Äôassainissement principal", ["Aucun","lat brut", "lat am√©rior√©", "WC raccord√©"])
    Quin_Ric= st.selectbox("Quintile de richesse (score)", ["Q1 (pauvre)", "Q2", "Q3", "Q4", "Q5"])
    st.markdown("---")



    # -------- Bloc Maternit√© --------
    st.header("Section B: Caract√©ristiques maternelles")
    M_AGE = st.number_input("√Çge de la m√®re (ann√©es)", min_value=10, max_value=60, step=1)

    M_EDU = st.selectbox("Niveau d‚Äôinstruction", 
                        options={0:"Aucun",1:"Primaire",2:"Secondaire",3:"Sup√©rieur"}.keys(),
                        format_func=lambda x: {0:"Aucun",1:"Primaire",2:"Secondaire",3:"Sup√©rieur"}[x])

    M_MARIT = st.selectbox("Statut matrimonial", 
                        options={1:"C√©libataire",2:"Mari√©e",3:"Union",4:"Div/Veuve"}.keys(),
                        format_func=lambda x: {1:"C√©libataire",2:"Mari√©e",3:"Union",4:"Div/Veuve"}[x])

    M_BMI = st.number_input("IMC avant/1er trimestre (kg/m¬≤)", min_value=10.0, max_value=50.0, step=0.1)

    M_ANEM = st.radio("An√©mie pendant la grossesse ?", [0,1,9], 
                    format_func=lambda x: {1:"Oui",0:"Non",9:"Inconnu"}[x])

    M_HTN = st.radio("HTA/Pr√©√©clampsie/√âclampsie diagnostiqu√©e ?", [0,1,9], 
                    format_func=lambda x: {1:"Oui",0:"Non",9:"Inconnu"}[x])

    M_HIV = st.radio("Statut VIH", [0,1,9], 
                    format_func=lambda x: {1:"Positif",0:"N√©gatif",9:"Inconnu/Non test√©"}[x])

    M_MAL = st.selectbox("√âpisodes de paludisme pendant la grossesse", 
                        options={0:"Non",1:"Oui, 1 fois",2:"Oui, ‚â•2 fois",9:"Inconnu"}.keys(),
                        format_func=lambda x: {0:"Non",1:"Oui, 1 fois",2:"Oui, ‚â•2 fois",9:"Inconnu"}[x])

    M_PNC = st.number_input("Nombre de consultations pr√©natales", min_value=0, max_value=20, step=1)

    M_ITN = st.radio("A dormi sous moustiquaire impr√©gn√©e (MII) la nuit pass√©e ?", [0,1], 
                    format_func=lambda x: {1:"Oui",0:"Non"}[x])

    M_BIRTHINT = st.number_input("Intervalle avec grossesse pr√©c√©dente (mois) (888 si primipare)", min_value=0, max_value=888, step=1)

    M_PARITY = st.number_input("Parit√© (accouchements ‚â•28 SA)", min_value=0, max_value=20, step=1)

    M_ANC_BP = st.radio("TA contr√¥l√©e pendant la CPN ?", [0,1,9], 
                        format_func=lambda x: {1:"Oui",0:"Non",9:"Inconnu"}[x])
    st.markdown("---")
# ------------------------------------------------------------------------------

    st.markdown("### Section C. Accouchement & Syst√®me de sant√©")

    DELIV_PLACE = st.selectbox("Lieu d‚Äôaccouchement", 
        options={1:"Domicile",2:"CS",3:"H√¥pital",4:"Clinique"}.keys(),
        format_func=lambda x: {1:"Domicile",2:"CS",3:"H√¥pital",4:"Clinique"}[x])

    DELIV_ATT = st.radio("Personnel qualifi√© pr√©sent ?", [1,0], 
        format_func=lambda x: {1:"Oui",0:"Non"}[x])

    DELIV_MODE = st.selectbox("Mode d‚Äôaccouchement", 
        options={1:"Voie basse",2:"C√©sarienne",3:"Instrumental"}.keys(),
        format_func=lambda x: {1:"Voie basse",2:"C√©sarienne",3:"Instrumental"}[x])

    REF_TIME = st.number_input("Temps d‚Äô√©vacuation/r√©f√©rence (minutes)", min_value=0, max_value=720, step=5)

    BLOOD_AV = st.radio("Sang disponible pour transfusion ?", [1,0,9], 
        format_func=lambda x: {1:"Oui",0:"Non",9:"NA"}[x])

    PPH = st.radio("H√©morragie du post-partum ?", [1,0,9], 
        format_func=lambda x: {1:"Oui",0:"Non",9:"Inconnu"}[x])

    SEPSIS = st.radio("Infection/septic√©mie post-partum ?", [1,0,9], 
        format_func=lambda x: {1:"Oui",0:"Non",9:"Inconnu"}[x])


    st.markdown("### Section D. Nouveau-n√© & Soins postnataux")

    B_SEX = st.radio("Sexe du nouveau-n√©", [1,2], format_func=lambda x: {1:"Masculin",2:"F√©minin"}[x])
    B_GA = st.number_input("√Çge gestationnel (semaines) (99 si inconnu)", min_value=20, max_value=99, step=1)
    B_WT = st.number_input("Poids de naissance (g) (9999 si inconnu)", min_value=500, max_value=9999, step=10)
    APGAR5 = st.slider("Score d‚ÄôApgar √† 5 minutes", 0, 10, 7)

    RESUS = st.radio("R√©animation n√©cessaire ?", [1,0,9], format_func=lambda x: {1:"Oui",0:"Non",9:"Inconnu"}[x])
    BF_INIT = st.radio("Allaitement initi√© <1h ?", [1,0,9], format_func=lambda x: {1:"Oui",0:"Non",9:"NA"}[x])
    EBF_6M = st.radio("Allaitement exclusif √† 6 mois ?", [1,0,9], format_func=lambda x: {1:"Oui",0:"Non",9:"NA"}[x])
    IMMUN = st.radio("Statut vaccinal", [0,1,2], format_func=lambda x: {0:"Non",1:"Partiel",2:"Complet"}[x])
    NEO_INF = st.radio("Infection n√©onatale ?", [1,0,9], format_func=lambda x: {1:"Oui",0:"Non",9:"Inconnu"}[x])

    DIARR = st.number_input("Nb d‚Äô√©pisodes de diarrh√©e (0‚Äì11 mois)", min_value=0, max_value=20, step=1)
    ARI = st.number_input("Nb d‚Äô√©pisodes d‚ÄôIRA (0‚Äì11 mois)", min_value=0, max_value=20, step=1)


    st.markdown("### Section E. Acc√®s & Retards")

    PNC_POST = st.radio("Consultation postnatale m√®re <48h ?", [1,0], format_func=lambda x: {1:"Oui",0:"Non"}[x])
    PPC_NEWBORN = st.radio("Visite postnatale du nouveau-n√© <48h ?", [1,0], format_func=lambda x: {1:"Oui",0:"Non"}[x])
    DIST_FAC = st.number_input("Distance au centre de sant√© (km)", min_value=0, max_value=500, step=1)
    COST_CARE = st.number_input("Co√ªt direct recours aux soins (FCFA)", min_value=0, max_value=1000000, step=1000)

    DELAY_1 = st.radio("Retard 1: D√©cision tardive ?", [1,0], format_func=lambda x: {1:"Oui",0:"Non"}[x])
    DELAY_2 = st.radio("Retard 2: Difficult√©s transport ?", [1,0], format_func=lambda x: {1:"Oui",0:"Non"}[x])
    DELAY_3 = st.radio("Retard 3: Probl√®mes accueil ?", [1,0], format_func=lambda x: {1:"Oui",0:"Non"}[x])


    st.markdown("### Section F. Issues (Outcomes)")

    MAT_DEATH = st.radio("D√©c√®s maternel ?", [1,0], format_func=lambda x: {1:"Oui",0:"Non"}[x])
    NND = st.radio("D√©c√®s n√©onatal (0‚Äì28j) ?", [1,0], format_func=lambda x: {1:"Oui",0:"Non"}[x])
    IMD = st.radio("D√©c√®s infantile (<1 an) ?", [1,0], format_func=lambda x: {1:"Oui",0:"Non"}[x])

    # Logique conditionnelle
    DOD, CAUSE = None, None
    if MAT_DEATH==1 or NND==1 or IMD==1:
        DOD = st.date_input("Date du d√©c√®s (si applicable)", value=date.today())
        CAUSE = st.selectbox("Cause probable du d√©c√®s",
            options={1:"H√©morragie",2:"HTA/√©clampsie",3:"Infection",4:"Asphyxie",
                    5:"Pr√©maturit√©",6:"Paludisme",7:"Autre"}.keys(),
            format_func=lambda x: {1:"H√©morragie",2:"HTA/√©clampsie",3:"Infection",4:"Asphyxie",
                                5:"Pr√©maturit√©",6:"Paludisme",7:"Autre"}[x])




    # -------- Bloc Enfant --------
    st.header("Section C: Accouchement & Syst√®me de sant√©")
    sexe_enfant = st.radio("Sexe de l‚Äôenfant", ["Masculin", "F√©minin"])
    poids_naissance = st.number_input("Poids de naissance (en grammes)", min_value=500, max_value=6000, step=10)
    allaitement = st.radio("Allaitement exclusif ?", ["Oui", "Non"])
    vaccination = st.radio("Carnet de vaccination √† jour ?", ["Oui", "Non"])
    mortalite_infantile = st.radio("D√©c√®s de l‚Äôenfant avant 1 an ?", ["Oui", "Non"])

    # -------- Bloc Mortalit√© maternelle --------
    mortalite_maternelle = st.radio("D√©c√®s de la m√®re li√© √† la grossesse ou accouchement ?", ["Oui", "Non"])

    # --- SUBMIT ---
    submitted = st.form_submit_button("‚úÖ Enregistrer la r√©ponse")

    if submitted:
        # Cr√©er un dictionnaire
        nouvelle_reponse = {
            "Identifiant_m√©nage": identifiantM√©nage,
            "Lieu_r√©sidance": lieu_residance,
            "R√©gion": Region,
            "Eau_potable": Eau,
            "Assainissement": SANIT,
            "Quintile_richesse": Quin_Ric,

            "√Çge_m√®re": M_AGE,
            "Niveau_instruction": M_EDU,
            "Statut_matrimonial": M_MARIT,
            "IMC": M_BMI,
            "An√©mie": M_ANEM,
            "HTA": M_HTN,
            "VIH": M_HIV,
            "Paludisme": M_MAL,
            "Nb_CPN": M_PNC,
            "Moustiquaire": M_ITN,
            "Intervalle_grossesse": M_BIRTHINT,
            "Parit√©": M_PARITY,
            "TA_CPN": M_ANC_BP,

            "Lieu_accouchement": DELIV_PLACE,
            "Accouchement_assist√©": DELIV_ATT,
            "Mode_accouchement": DELIV_MODE,
            "Temps_r√©f√©rence": REF_TIME,
            "Sang_disponible": BLOOD_AV,
            "H√©morragie": PPH,
            "Septic√©mie": SEPSIS,

            "Sexe_nouveau_n√©": B_SEX,
            "√Çge_gestationnel": B_GA,
            "Poids_naissance": B_WT,
            "Apgar_5min": APGAR5,
            "R√©animation": RESUS,
            "Allaitement_<1h": BF_INIT,
            "Allaitement_6mois": EBF_6M,
            "Vaccination": IMMUN,
            "Infection_n√©onatale": NEO_INF,
            "Diarrh√©e": DIARR,
            "IRA": ARI,

            "Consult_postnatale_m√®re": PNC_POST,
            "Consult_postnatale_nouveau_n√©": PPC_NEWBORN,
            "Distance_sant√©": DIST_FAC,
            "Co√ªt_soins": COST_CARE,
            "Retard_d√©cision": DELAY_1,
            "Retard_transport": DELAY_2,
            "Retard_accueil": DELAY_3,

            "D√©c√®s_maternel": MAT_DEATH,
            "D√©c√®s_n√©onatal": NND,
            "D√©c√®s_infantile": IMD,
            "Date_d√©c√®s": DOD,
            "Cause_d√©c√®s": CAUSE,

            # Bloc enfant simplifi√© (doublon √† enlever si inutile)
            "Sexe_enfant": sexe_enfant,
            "Poids_enfant": poids_naissance,
            "Allaitement": allaitement,
            "Vaccination_ok": vaccination,
            "Mortalit√©_infantile": mortalite_infantile,
            "Mortalit√©_maternelle": mortalite_maternelle
        }

        # Charger l‚Äôancien fichier s‚Äôil existe, sinon cr√©er un nouveau
        if os.path.exists(FICHIER):
            df = pd.read_excel(FICHIER)
            df = pd.concat([df, pd.DataFrame([nouvelle_reponse])], ignore_index=True)
        else:
            df = pd.DataFrame([nouvelle_reponse])

        # Sauvegarder dans Excel
        df.to_excel(FICHIER, index=False)

        # Convertir la date en texte pour √©viter erreur pyarrow
        if "Date_d√©c√®s" in df.columns:
            df["Date_d√©c√®s"] = df["Date_d√©c√®s"].astype(str)

        st.success("R√©ponse enregistr√©e dans le fichier ‚úÖ")
        st.dataframe(df.tail(5))  # afficher les 5 derni√®res r√©ponses
